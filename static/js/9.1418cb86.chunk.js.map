{"version":3,"sources":["utils/request.js","utils/endpoints.js","data/config.js","assets/images/logo-rasyiidu-black.png","views/BackgroundHeader/index.js","views/pages/Header/index.js","utils/utils.js","views/Soal/PilihanGanda/index.js","views/Soal/MultipleSelection/index.js","views/Soal/MultipleSelection/MultipleSelectionVertical.js","views/Soal/PilihanGandaVertical/index.js","views/Soal/ShortEssay/index.js","views/Soal/BenarSalah/vertikal.js","views/Soal/BenarSalah/horizontal.js","views/Soal/SurveyLingkungan/index.js","views/Soal/Menjodohkan/index.js","views/Soal/Menjodohkan/vertikal.js","views/Loading/PageLoading.js","views/pages/Exam/index.js"],"names":["request","param","config","header","endpoint","method","data","url","ApiConfig","baseUrl","params","token","localStorage","getItem","headers","Authorization","axiosConfig","timeout","toUpperCase","shouldLogApi","console","log","Promise","resolve","reject","axios","then","response","body","catch","err","status","code","message","error","endpoints","postCreateSoal","getListSoal","getListUjian","getSoalById","gerListArticle","getUsers","getEvents","createEvent","createSchool","getSchool","importUser","createUser","login","chooseExamUser","id","startExamUser","status_ujian","generateFirsSoal","level_soal_terakhir","hasil_jawaban_terakhir","generateSoal","jawabSoalPilgan","getExamDetail","getExamTimeLeft","createLog","process","exams","1","2","3","4","5","6","7","8","9","10","11","12","module","exports","Header","className","DataConfirmation","children","history","useHistory","dispatch","useDispatch","useState","confirmLogout","setConfirmLogout","profile","useSelector","state","user","logout","a","type","RESET_USER","payload","clear","push","show","onClose","shape","color","onClick","fluid","src","logo","alt","nama","strip_html_tags","str","toString","replace","generateHTML","html","isOption","includeImage","split","length","PilihanGanda","props","DATA_SOAL","dataSoal","userSoal","useEffect","current","index","exam_user_question_id","id_soal","jawaban","soal","exam_question_answer","map","item","status_jawaban","res","SET_HASIL_JAWAB_SOAL","hasil","md","dangerouslySetInnerHTML","__html","pertanyaan","key","variant","custom","name","checked","Boolean","parseInt","onChange","e","SET_JAWABAN_SOAL_PG","SET_STATUS_JAWAB_SOAL","htmlFor","mapNumToChar","text_jawaban","exam_question_articles","judul","title","style","height","overflowY","artikel","SET_JAWABAN_SOAL_PG_COMPLEX","value","SET_JAWABAN_SOAL_ISIAN_SINGKAT","target","pola_jawaban","label","SET_JAWABAN_SOAL_BENAR_SALAH","item_pola","index_pola","readOnly","SET_JAWABAN_SURVEY_LINGKUNGAN","MenjodohkanVertikal","useRef","data_jawaban","dataJawaban","setDataJawaban","leftRef","rightRef","lines","setLines","lastItemClicked","setLastItemClicked","width","React","window","innerHeight","innerWidth","dimensions","setDimensions","left","right","lineExists","l","r","isExist","sj","i","il","ir","onListItemClicked","Object","keys","exist","newSJ","filter","SET_JAWABAN_SOAL_MENJODOHKAN","String","handleResize","addEventListener","removeEventListener","scrollTo","separate","setTimeout","newLines","statusjawaban","leftIndex","rightIndex","p1","getBoundingClientRect","p2","x0","x","y0","y","x1","y1","reCreateLines","borderColor","borderWidth","row","xs","cursor","ref","el","PageLoading","role","Exam","dataExam","alertMessage","setAlertMessage","totalSoalUjian","totalSoal","waktu_server","showModalNavigation","setShowModalNavigation","showModalInformasi","setShowModalInformasi","confirmExit","setConfirmExit","loading","setLoading","modal","setModal","timeLeft","setTimeLeft","showModalFinishConfirmation","setShowModalFinishConfirmation","toggle","toasts","setToasts","toasters","reduce","toast","position","addToast","success","autohide","closeButton","fade","confirmTimeEnd","sendLog","quitExam","timeLeftbackend","username","sekolah","school_nama","ujian","examUserId","currentUser","waktu_mulai","Date","waktu_selesai","device","time","browser","ua","navigator","userAgent","app","appVersion","connection","effectiveType","moment","format","messages","generateNextSoal","ragu","exam_user_id","level_soal","tipe_jawaban","nextSoal","SET_DATA_SOAL","SET_ID_USER_SOAL","SET_CURRENT_SOAL","getTimeLeft","interval","setInterval","clearInterval","borderBottomWidth","borderBottomColor","borderBottomStyle","borderRadius","fontWeight","date","getTime","onComplete","pertanyaan_layout","PilihanGandaVertical","MultipleSelectionVertical","ShortEssay","SurveyLingkungan","MultipleSelection","Menjodohkan","disabled","informasi_soal","marginBottom","display","flexDirection","justifyContent","to","size","closeOnBackdrop","toasterKey"],"mappings":"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","file":"static/js/9.1418cb86.chunk.js","sourcesContent":["/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  IMPORTS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\n\r\n// ----------------------------------------\r\n// PACKAGE IMPORTS\r\n// ----------------------------------------\r\nimport axios from \"axios\";\r\nimport { ApiConfig, shouldLogApi } from \"src/data/config\";\r\n\r\n// ----------------------------------------\r\n// LOCAL IMPORTS\r\n// ----------------------------------------\r\n// import ApiConfig from \"@app-configs/Api\";\r\n// import API from \"@app-api-endpoints\";\r\n\r\n/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  METHODS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\nexport default function request(param, config, header = {}) {\r\n  // ApiConfig.devLog &&\r\n  // (ApiConfig.devLogApis.length === 0 ||\r\n  //   ApiConfig.devLogApis.indexOf(api) > -1 ||\r\n  //   ApiConfig.breakDevLogToken);\r\n\r\n  const { endpoint, method, data } = config;\r\n\r\n  const url = `${ApiConfig.baseUrl}${endpoint}`;\r\n  const params = {\r\n    ...param,\r\n    ...data,\r\n  };\r\n\r\n  let token = localStorage.getItem(\"token\"); //ApiConfig.getToken(getState);\r\n\r\n  // if (shouldLogApi && ApiConfig.breakDevLogToken) {\r\n  //   console.error(token);\r\n  // }\r\n\r\n  const headers = {\r\n    ...header,\r\n    // \"Content-Type\": \"application/json\",\r\n    // \"Accept\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const axiosConfig = {\r\n    method,\r\n    url,\r\n    headers,\r\n    timeout: ApiConfig.timeout * 1000,\r\n  };\r\n\r\n  if (method.toUpperCase() === \"GET\") {\r\n    axiosConfig.params = params;\r\n  } else {\r\n    axiosConfig.data = params;\r\n  }\r\n  // console.log(\"config\", axiosConfig);\r\n\r\n  if (shouldLogApi) {\r\n    console.log(\r\n      \"[request start]\\n\\n-url: \",\r\n      url,\r\n      \"\\n\\n-method: \",\r\n      method,\r\n      \"\\n\\n-params: \",\r\n      params,\r\n      \"\\n\\n-config: \",\r\n      axiosConfig\r\n    );\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axios(axiosConfig)\r\n      .then((response) => {\r\n        if (shouldLogApi) {\r\n          console.log(\r\n            \"[response received]\\n\\n-url: \",\r\n            url,\r\n            \"\\n\\n-method: \",\r\n            method,\r\n            \"\\n\\n-params: \",\r\n            params,\r\n            \"\\n\\n-response: \",\r\n            response\r\n          );\r\n        }\r\n\r\n        const body = response.data;\r\n        resolve(body);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"[response error]\\n\\n-url: \",\r\n          url,\r\n          \"\\n\\n-method: \",\r\n          method,\r\n          \"\\n\\n-params: \",\r\n          params,\r\n          \"\\n\\n-response: \",\r\n          err\r\n        );\r\n\r\n        reject({\r\n          status:\r\n            err.response && err.response.status ? err.response.status : 999,\r\n          code: \"x999\",\r\n          message: err.message,\r\n          error: err,\r\n          // additionals: {\r\n          //   url: url,\r\n          //   method: method,\r\n          //   params: JSON.stringify(params),\r\n\r\n          // },\r\n        });\r\n      });\r\n  });\r\n}\r\n","const endpoints = {\n  postCreateSoal: {\n    endpoint: \"/api/exam/question/save-all\",\n    method: \"POST\",\n    data: {},\n  },\n  getListSoal: {\n    endpoint: \"/api/exam/question\",\n    method: \"GET\",\n    data: {},\n  },\n  getListUjian: {\n    endpoint: \"/api/exam\",\n    method: \"GET\",\n    data: {},\n  },\n  getSoalById: {\n    endpoint: \"/api/exam/question/\",\n    method: \"GET\",\n    data: {},\n  },\n  gerListArticle: {\n    endpoint: \"/api/exam/question/article\",\n    method: \"GET\",\n    data: {},\n  },\n  getUsers: {\n    endpoint: \"/api/user\",\n    method: \"GET\",\n    data: {},\n  },\n  getEvents: {\n    endpoint: \"/api/exam/event\",\n    method: \"GET\",\n    data: {},\n  },\n  createEvent: {\n    endpoint: \"/api/exam/event\",\n    method: \"POST\",\n    data: {},\n  },\n  createSchool: {\n    endpoint: \"/api/school\",\n    method: \"POST\",\n    data: {},\n  },\n  getSchool: {\n    endpoint: \"/api/school\",\n    method: \"GET\",\n    data: {},\n  },\n  importUser: {\n    endpoint: \"/api/user/import\",\n    method: \"POST\",\n    data: {},\n  },\n  createUser: {\n    endpoint: \"/api/user\",\n    method: \"POST\",\n    data: {},\n  },\n  login: {\n    endpoint: \"/api/user/login\",\n    method: \"POST\",\n    data: {},\n  },\n  chooseExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      id: null,\n    },\n  },\n  startExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      status_ujian: \"progress\",\n    },\n  },\n  generateFirsSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {\n      level_soal_terakhir: null,\n      hasil_jawaban_terakhir: null,\n    },\n  },\n  generateSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {},\n  },\n  jawabSoalPilgan: {\n    endpoint: \"/api/exam/user/answer\",\n    method: \"POST\",\n    data: {},\n  },\n  getExamDetail: {\n    endpoint: \"/api/exam/\",\n    method: \"GET\",\n    data: {},\n  },\n  getExamTimeLeft: {\n    endpoint: \"/api/exam/event/timeleft/\",\n    method: \"GET\",\n    data: {},\n  },\n  createLog: {\n    endpoint: \"/api/log/create\",\n    method: \"POST\",\n    data: {},\n  },\n};\n\nexport default endpoints;\n","export const ID_SOAL_AKM = 1;\nexport const ID_SOAL_SURVEY_KARAKTER = 2;\nexport const ApiConfig = {\n  baseUrl:\n    process.env.REACT_APP_ENVIRONTMENT === \"production\"\n      ? \"https://akm.rasyiidujs3.com\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"prod-local\"\n      ? \"http://192.168.0.200:8082\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"local\"\n      ? \"http://127.0.0.1:8081\"\n      : \"https://akm-api-redis.aplikasiweb.site\",\n\n  timeout: 120,\n};\n\nexport const shouldLogApi = process.env.REACT_APP_ENVIRONTMENT !== \"production\";\n\nexport const access = {\n  0: \"Admin Utama\",\n  1: \"Admin MKKS\",\n  2: \"Proktor\",\n  3: \"Sub Proktor\",\n};\n\nexport const exams = {\n  1: \"AKM SMA Literasi\",\n  2: \"AKM SMA Numerasi\",\n  3: \"AKM SMP Literasi\",\n  4: \"AKM SMP Numerasi\",\n  5: \"Survey Karakter SMA\",\n  6: \"Survey Karakter SMP\",\n  7: \"Survey Lingkungan Belajar SMA\",\n  8: \"Survey Lingkungan Belajar SMP\",\n  9: \"Simulasi Literasi\",\n  10: \"Simulasi Numerasi\",\n  11: \"Simulasi Survey Karakter\",\n  12: \"Simulasi Survey Lingkungan Belajar\",\n};\n\nexport const statuses = {\n  0: \"Tidak Aktif\",\n  1: \"Aktif\",\n};\n\nexport const DATA_UKURAN_SOAL = [\n  { fontSize: 15, fontWeight: 700 },\n  { fontSize: 18, fontWeight: 500 },\n  { fontSize: 20, fontWeight: 300 },\n];\n\nexport const DATA_SOAL = [\n  { type: \"TarikGaris\" },\n  { type: \"Menjodohkan\" },\n  { type: \"Matching\" },\n  { type: \"PilihanGanda\" },\n  { type: \"MultipleSelection\" },\n  { type: \"Matrix\" },\n  { type: \"SingleSelectWithEssay\" },\n  { type: \"PilihanGandaVertical\" },\n  { type: \"ShortEssay\" },\n  // { type: 'Essay' },\n];\n","module.exports = __webpack_public_path__ + \"static/media/logo-rasyiidu-black.bb6b80e8.png\";","import React from \"react\";\n\nexport default function Header() {\n  return <div className=\"bg-header\" />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CContainer,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CModalBody,\n} from \"@coreui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RESET_USER } from \"../../../redux/actions\";\nimport BGHeader from \"../../BackgroundHeader\";\nimport logo from \"../../../assets/images/logo-rasyiidu-black.png\";\n\nfunction DataConfirmation({ children }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [confirmLogout, setConfirmLogout] = useState(false);\n  const { profile } = useSelector((state) => state.user);\n  const toggleModalLogout = () => {\n    setConfirmLogout(!confirmLogout);\n  };\n  const logout = async () => {\n    try {\n      dispatch({ type: RESET_USER, payload: null });\n      localStorage.clear();\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <main className=\"c-main\">\n      <CModal show={confirmLogout} onClose={toggleModalLogout} shape=\"rounded\">\n        <CModalHeader>\n          <CModalTitle>Info</CModalTitle>\n        </CModalHeader>\n        <CModalBody>Apakah anda yakin akan keluar ?</CModalBody>\n        <CModalFooter>\n          <CButton shape=\"pill\" color=\"danger\" onClick={() => logout()}>\n            Ya\n          </CButton>\n          <CButton\n            shape=\"pill\"\n            color=\"success\"\n            onClick={() => setConfirmLogout(false)}\n          >\n            Tidak\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <BGHeader />\n      <CContainer fluid>\n        <div className=\"d-flex justify-content-between\">\n          <img src={logo} alt=\"logo-rasyiidu\" className=\"center\" />\n          <div className=\"\">\n            <strong className=\"text-white float-right mr-1\">\n              {profile.nama}\n            </strong>\n            <br />\n            <CButton\n              color=\"light\"\n              className=\"float-right font-weight-bold\"\n              shape=\"pill\"\n              onClick={() => setConfirmLogout(true)}\n            >\n              Logout\n            </CButton>\n          </div>\n        </div>\n        {children}\n      </CContainer>\n    </main>\n  );\n}\n\nexport default DataConfirmation;\n","export const upperCase = (text) => {\n  const t = text.replace(/_/g, \" \");\n  const s = t.split(\" \");\n  return s.reduce((p, c) => {\n    return p + \" \" + c.charAt(0).toUpperCase() + c.slice(1);\n  }, \"\");\n};\n\nexport const strip_html_tags = (str) => {\n  if (str === null || str === \"\") return false;\n  else str = str.toString();\n  return str.replace(/<[^>]*>/g, \"\");\n};\n\nexport const generateHTML = (html, isOption = false) => {\n  const includeImage = html.split(\"data:image\");\n  html = html.replace(\n    '<p data-f-id=\"pbf\" style=\"text-align: center; font-size: 14px; margin-top: 30px; opacity: 0.65; font-family: sans-serif;\">Powered by <a href=\"https://www.froala.com/wysiwyg-editor?pb=1\" title=\"Froala Editor\">Froala Editor</a></p>',\n    \"\"\n  );\n  // const htm = new DOMParser().parseFromString(html, \"text/html\");\n  // console.log(htm);\n  // htm.getElementsByTagName(\"a\");\n  if (!isOption) return html;\n  if (includeImage.length > 1) {\n    return html;\n  } else {\n    return strip_html_tags(html);\n  }\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport {\n  CTabs,\n  CNavItem,\n  CNav,\n  CNavLink,\n  CTabPane,\n  CTabContent,\n  CInputRadio,\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n} from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n  const mapNumToChar = (index) => {\n    const abjad = \"ABCDEFGHIJKLMNOPQRSTUPWZYZ\";\n    return abjad.split(\"\")[index];\n  };\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <CRow>\n      <CCol md={6}>\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n          return (\n            <CFormGroup key={index} variant=\"custom-radio\">\n              <CInputRadio\n                custom\n                name=\"radio-input-jawaban\"\n                id={`radio-layout-soal-${index}`}\n                checked={Boolean(parseInt(item.status_jawaban))}\n                onChange={(e) => {\n                  dispatch({ type: SET_JAWABAN_SOAL_PG, payload: index });\n                  dispatch({\n                    type: SET_STATUS_JAWAB_SOAL,\n                    payload: { status: \"dijawab\" },\n                  });\n                }}\n              />\n              <CLabel\n                variant=\"custom-checkbox\"\n                htmlFor={`radio-layout-soal-${index}`}\n              >\n                {mapNumToChar(index)}\n                <span\n                  className=\"pilgan-answer ml-3\"\n                  dangerouslySetInnerHTML={{\n                    __html: generateHTML(item.text_jawaban, true),\n                  }}\n                />\n              </CLabel>\n            </CFormGroup>\n          );\n        })}\n      </CCol>\n      <CCol md={6}>\n        <div className=\"box-soal\">\n          <CTabs>\n            <CNav variant=\"tabs\">\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CNavItem key={index}>\n                    <CNavLink>{item.judul}</CNavLink>\n                  </CNavItem>\n                );\n              })}\n            </CNav>\n            <CTabContent>\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CTabPane key={index} title=\"Artikel\">\n                    <div\n                      className=\"px-4\"\n                      style={{ height: 500, overflowY: \"scroll\" }}\n                    >\n                      <div className=\"mb-2\" key={index}>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: generateHTML(item.artikel),\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </CTabPane>\n                );\n              })}\n            </CTabContent>\n          </CTabs>\n        </div>\n      </CCol>\n    </CRow>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG_COMPLEX,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport {\n  CTabs,\n  CNavItem,\n  CNav,\n  CNavLink,\n  CTabPane,\n  CTabContent,\n  CFormGroup,\n  CRow,\n  CCol,\n  CInputCheckbox,\n  CLabel,\n} from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <CRow>\n      <CCol md={6}>\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        <div className=\"px-4\">\n          {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n            return (\n              <CFormGroup key={index}>\n                <CInputCheckbox\n                  id={`checkbox-jawaban-complex${index}`}\n                  name={`checkbox-jawaban-complex${index}`}\n                  checked={Boolean(parseInt(item.status_jawaban))}\n                  onChange={(e) => {\n                    dispatch({\n                      type: SET_JAWABAN_SOAL_PG_COMPLEX,\n                      payload: index,\n                    });\n                    dispatch({\n                      type: SET_STATUS_JAWAB_SOAL,\n                      payload: { status: \"dijawab\" },\n                    });\n                  }}\n                />\n                <CLabel\n                  variant=\"checkbox\"\n                  className=\"form-check-label\"\n                  htmlFor={`checkbox-jawaban-complex${index}`}\n                >\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: generateHTML(item.text_jawaban, true),\n                    }}\n                  />\n                </CLabel>\n              </CFormGroup>\n            );\n          })}\n        </div>\n      </CCol>\n      <CCol md={6}>\n        <div className=\"box-soal\">\n          <CTabs>\n            <CNav variant=\"tabs\">\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CNavItem key={index}>\n                    <CNavLink>{item.judul}</CNavLink>\n                  </CNavItem>\n                );\n              })}\n            </CNav>\n            <CTabContent>\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CTabPane key={index} title=\"Artikel\">\n                    <div\n                      className=\"px-4\"\n                      style={{ height: 500, overflowY: \"scroll\" }}\n                    >\n                      <div className=\"mb-2\" key={index}>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: generateHTML(item.artikel),\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </CTabPane>\n                );\n              })}\n            </CTabContent>\n          </CTabs>\n        </div>\n      </CCol>\n    </CRow>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG_COMPLEX,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport { CLabel, CFormGroup, CInputCheckbox } from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        <div className=\"px-4\">\n          {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n            return (\n              <CFormGroup key={index}>\n                <CInputCheckbox\n                  id={`checkbox-jawaban-complex${index}`}\n                  name={`checkbox-jawaban-complex${index}`}\n                  checked={Boolean(parseInt(item.status_jawaban))}\n                  onChange={(e) => {\n                    dispatch({\n                      type: SET_JAWABAN_SOAL_PG_COMPLEX,\n                      payload: index,\n                    });\n                    dispatch({\n                      type: SET_STATUS_JAWAB_SOAL,\n                      payload: { status: \"dijawab\" },\n                    });\n                  }}\n                />\n                <CLabel\n                  variant=\"checkbox\"\n                  className=\"form-check-label\"\n                  htmlFor={`checkbox-jawaban-complex${index}`}\n                >\n                  <span\n                    dangerouslySetInnerHTML={{\n                      __html: generateHTML(item.text_jawaban, true),\n                    }}\n                  />\n                </CLabel>\n              </CFormGroup>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport { CInputRadio, CLabel, CFormGroup } from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n  const mapNumToChar = (index) => {\n    const abjad = \"ABCDEFGHIJKLMNOPQRSTUPWZYZ\";\n    return abjad.split(\"\")[index];\n  };\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n          return (\n            <CFormGroup key={index} variant=\"custom-radio\">\n              <CInputRadio\n                custom\n                name=\"radio-input-jawaban\"\n                id={`radio-layout-soal-${index}`}\n                checked={Boolean(parseInt(item.status_jawaban))}\n                onChange={(e) => {\n                  dispatch({ type: SET_JAWABAN_SOAL_PG, payload: index });\n                  dispatch({\n                    type: SET_STATUS_JAWAB_SOAL,\n                    payload: { status: \"dijawab\" },\n                  });\n                }}\n              />\n              <CLabel\n                variant=\"custom-checkbox\"\n                htmlFor={`radio-layout-soal-${index}`}\n              >\n                {mapNumToChar(index)}\n                <span\n                  className=\"pilgan-answer ml-3\"\n                  dangerouslySetInnerHTML={{\n                    __html: generateHTML(item.text_jawaban, true),\n                  }}\n                />\n              </CLabel>\n            </CFormGroup>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_ISIAN_SINGKAT,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        // exam_user_question_id: dataSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            text_jawaban: item.text_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n    // console.log(\"data pilgan vertical ->>\", DATA_SOAL);\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n          return (\n            <input\n              key={index}\n              // type={DATA_SOAL.exam_id === 2 ? \"number\" : \"text\"}\n              type=\"text\"\n              value={item.text_jawaban}\n              onChange={(e) => {\n                dispatch({\n                  type: SET_JAWABAN_SOAL_ISIAN_SINGKAT,\n                  payload: { index, text_jawaban: e.target.value },\n                });\n                dispatch({\n                  type: SET_STATUS_JAWAB_SOAL,\n                  payload: { status: \"dijawab\" },\n                });\n              }}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_HASIL_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_BENAR_SALAH,\n} from \"../../../redux/actions\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        <table className=\"table-bordered\">\n          <thead>\n            <tr>\n              <th>Pertanyaan</th>\n              {DATA_SOAL.exam_question_answer.pola_jawaban.map(\n                (item, index) => {\n                  return <th key={index}>{item.label}</th>;\n                }\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: generateHTML(item.text_jawaban),\n                      }}\n                    />\n                  </td>\n                  <td className=\"text-center\">\n                    <input\n                      type=\"radio\"\n                      name={`benar-salah-${index}`}\n                      checked={item.status_jawaban === \"1\"}\n                      onChange={() => {\n                        dispatch({\n                          type: SET_JAWABAN_SOAL_BENAR_SALAH,\n                          payload: { index, status: \"1\" },\n                        });\n                        dispatch({\n                          type: SET_STATUS_JAWAB_SOAL,\n                          payload: { status: \"dijawab\" },\n                        });\n                      }}\n                    />\n                  </td>\n                  <td className=\"text-center\">\n                    <input\n                      type=\"radio\"\n                      name={`benar-salah-${index}`}\n                      checked={item.status_jawaban === \"0\"}\n                      onChange={() => {\n                        console.log(1);\n                        dispatch({\n                          type: SET_JAWABAN_SOAL_BENAR_SALAH,\n                          payload: { index, status: \"0\" },\n                        });\n                        dispatch({\n                          type: SET_STATUS_JAWAB_SOAL,\n                          payload: { status: \"dijawab\" },\n                        });\n                      }}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_BENAR_SALAH,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport {\n  CTabs,\n  CNavItem,\n  CNav,\n  CNavLink,\n  CTabPane,\n  CTabContent,\n  CRow,\n  CCol,\n} from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <CRow>\n      <CCol md={6}>\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        <table className=\"table-bordered\">\n          <thead>\n            <tr>\n              <th>Pertanyaan</th>\n              {DATA_SOAL.exam_question_answer.pola_jawaban.map(\n                (item, index) => {\n                  return <th key={index}>{item.label}</th>;\n                }\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: generateHTML(item.text_jawaban),\n                      }}\n                    />\n                  </td>\n                  <td className=\"text-center\">\n                    <input\n                      type=\"radio\"\n                      name={`benar-salah-${index}`}\n                      checked={item.status_jawaban === \"1\"}\n                      onChange={() => {\n                        dispatch({\n                          type: SET_JAWABAN_SOAL_BENAR_SALAH,\n                          payload: { index, status: \"1\" },\n                        });\n                        dispatch({\n                          type: SET_STATUS_JAWAB_SOAL,\n                          payload: { status: \"dijawab\" },\n                        });\n                      }}\n                    />\n                  </td>\n                  <td className=\"text-center\">\n                    <input\n                      type=\"radio\"\n                      name={`benar-salah-${index}`}\n                      checked={item.status_jawaban === \"0\"}\n                      onChange={() => {\n                        dispatch({\n                          type: SET_JAWABAN_SOAL_BENAR_SALAH,\n                          payload: { index, status: \"0\" },\n                        });\n                        dispatch({\n                          type: SET_STATUS_JAWAB_SOAL,\n                          payload: { status: \"dijawab\" },\n                        });\n                      }}\n                    />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </CCol>\n      <CCol md={6}>\n        <div className=\"box-soal\">\n          <CTabs>\n            <CNav variant=\"tabs\">\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CNavItem key={index}>\n                    <CNavLink>{item.judul}</CNavLink>\n                  </CNavItem>\n                );\n              })}\n            </CNav>\n            <CTabContent>\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CTabPane key={index} title=\"Artikel\">\n                    <div\n                      className=\"px-4\"\n                      style={{ height: 500, overflowY: \"scroll\" }}\n                    >\n                      <div className=\"mb-2\" key={index}>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: generateHTML(item.artikel),\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </CTabPane>\n                );\n              })}\n            </CTabContent>\n          </CTabs>\n        </div>\n      </CCol>\n    </CRow>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_HASIL_JAWAB_SOAL,\n  SET_JAWABAN_SURVEY_LINGKUNGAN,\n} from \"../../../redux/actions\";\nimport { CInputRadio, CLabel, CFormGroup } from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <td>Pertanyaan</td>\n              {DATA_SOAL.exam_question_answer.pola_jawaban.map(\n                (item, index) => {\n                  return <td key={index}>{item.label}</td>;\n                }\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n              return (\n                <tr key={index}>\n                  <td>{item.text_jawaban}</td>\n                  {DATA_SOAL.exam_question_answer.pola_jawaban.map(\n                    (item_pola, index_pola) => {\n                      return (\n                        <td key={index_pola}>\n                          <CFormGroup variant=\"custom-radio\">\n                            <CInputRadio\n                              custom\n                              readOnly\n                              name={`radio-layout-soal-${index}`}\n                              id={`radio-layout-soal-${index}-${index_pola}`}\n                              checked={\n                                item_pola.status_jawaban == item.status_jawaban\n                              }\n                              onChange={(e) => {\n                                dispatch({\n                                  type: SET_JAWABAN_SURVEY_LINGKUNGAN,\n                                  payload: {\n                                    status_jawaban: item_pola.status_jawaban,\n                                    index,\n                                  },\n                                });\n                                dispatch({\n                                  type: SET_STATUS_JAWAB_SOAL,\n                                  payload: { status: \"dijawab\" },\n                                });\n                              }}\n                            />\n                            <CLabel\n                              variant=\"custom-checkbox\"\n                              htmlFor={`radio-layout-soal-${index}-${index_pola}`}\n                            />\n                          </CFormGroup>\n                        </td>\n                      );\n                    }\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG,\n  SET_HASIL_JAWAB_SOAL,\n} from \"../../../redux/actions\";\nimport {\n  CTabs,\n  CNavItem,\n  CNav,\n  CNavLink,\n  CTabPane,\n  CTabContent,\n  CInputRadio,\n  CFormGroup,\n  CRow,\n  CCol,\n  CLabel,\n} from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\n\nfunction PilihanGanda(props) {\n  const { dataSoal: DATA_SOAL } = props;\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const dispatch = useDispatch();\n  const mapNumToChar = (index) => {\n    const abjad = \"ABCDEFGHIJKLMNOPQRSTUPWZYZ\";\n    return abjad.split(\"\")[index];\n  };\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        jawaban: dataSoal.soal[\n          dataSoal.current.index\n        ].exam_question_answer.jawaban.map((item) => {\n          return {\n            status_jawaban: item.status_jawaban,\n          };\n        }),\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <CRow>\n      <CCol md={6}>\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n          return (\n            <CFormGroup key={index} variant=\"custom-radio\">\n              <CInputRadio\n                custom\n                name=\"radio-input-jawaban\"\n                id={`radio-layout-soal-${index}`}\n                checked={Boolean(parseInt(item.status_jawaban))}\n                onChange={(e) => {\n                  dispatch({ type: SET_JAWABAN_SOAL_PG, payload: index });\n                  dispatch({\n                    type: SET_STATUS_JAWAB_SOAL,\n                    payload: { status: \"dijawab\" },\n                  });\n                }}\n              />\n              <CLabel\n                variant=\"custom-checkbox\"\n                htmlFor={`radio-layout-soal-${index}`}\n              >\n                {mapNumToChar(index)}\n                <span\n                  className=\"pilgan-answer ml-3\"\n                  dangerouslySetInnerHTML={{\n                    __html: generateHTML(item.text_jawaban, true),\n                  }}\n                />\n              </CLabel>\n            </CFormGroup>\n          );\n        })}\n      </CCol>\n      <CCol md={6}>\n        <div className=\"box-soal\">\n          <CTabs>\n            <CNav variant=\"tabs\">\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CNavItem key={index}>\n                    <CNavLink>{item.judul}</CNavLink>\n                  </CNavItem>\n                );\n              })}\n            </CNav>\n            <CTabContent>\n              {DATA_SOAL.exam_question_articles.map((item, index) => {\n                return (\n                  <CTabPane key={index} title=\"Artikel\">\n                    <div\n                      className=\"px-4\"\n                      style={{ height: 500, overflowY: \"scroll\" }}\n                    >\n                      <div className=\"mb-2\" key={index}>\n                        <div\n                          dangerouslySetInnerHTML={{\n                            __html: generateHTML(item.artikel),\n                          }}\n                        />\n                      </div>\n                    </div>\n                  </CTabPane>\n                );\n              })}\n            </CTabContent>\n          </CTabs>\n        </div>\n      </CCol>\n    </CRow>\n  );\n}\n\nexport default PilihanGanda;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  SET_STATUS_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_PG,\n  SET_HASIL_JAWAB_SOAL,\n  SET_JAWABAN_SOAL_MENJODOHKAN,\n} from \"../../../redux/actions\";\nimport { CInputRadio, CLabel, CFormGroup, CCol } from \"@coreui/react\";\nimport { request, endpoints, generateHTML } from \"../../../utils\";\nimport { Line } from \"react-lineto\";\n\nfunction MenjodohkanVertikal(props) {\n  const dispatch = useDispatch();\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const userSoal = useSelector((state) => state.userSoal);\n  const DATA_SOAL = dataSoal.soal[dataSoal.current.index];\n  // const { dataSoal: DATA_SOAL } = dataSoal;\n  const prevScrollY = useRef(0);\n  const [goingUp, setGoingUp] = useState(false);\n\n  // ----------\n  const { exam_question_answer: data_jawaban } = DATA_SOAL;\n  const [dataJawaban, setDataJawaban] = useState({});\n  const leftRef = useRef([]);\n  const rightRef = useRef([]);\n  const [lines, setLines] = useState([]);\n  const [lastItemClicked, setLastItemClicked] = useState({});\n  const [containerDimension, setContainerDimension] = useState({\n    height: 0,\n    width: 0,\n  });\n  const [dimensions, setDimensions] = React.useState({\n    height: window.innerHeight,\n    width: window.innerWidth,\n  });\n  const [left, right] = data_jawaban.pola_jawaban;\n\n  // ------------- METHODS ------------------ //\n  const lineExists = (l, r) => {\n    let isExist = -1;\n    const sj = data_jawaban.pola_jawaban[2].status_jawaban;\n    for (let i = 0; i < sj.length; i++) {\n      const [il, ir] = sj[i];\n      if (il == l && ir == r) {\n        isExist = i;\n        break;\n      }\n    }\n    return isExist;\n  };\n  const onListItemClicked = (item) => {\n    if (Object.keys(lastItemClicked).length === 0) {\n      return setLastItemClicked({ ...item });\n    }\n    if (item.label === lastItemClicked.label) {\n      return setLastItemClicked({ ...item });\n    }\n\n    const sj = data_jawaban.pola_jawaban[2].status_jawaban;\n\n    // set status jawaban soal\n    dispatch({\n      type: SET_STATUS_JAWAB_SOAL,\n      payload: { status: \"dijawab\" },\n    });\n\n    if (item.label === dataJawaban.right.label) {\n      let exist = lineExists(\n        lastItemClicked.status_jawaban,\n        item.status_jawaban\n      );\n      if (exist >= 0) {\n        const newSJ = sj.filter((item, index) => {\n          if (index === exist) {\n            return false;\n          }\n          return true;\n        });\n        // console.log(\"---->newSJ\", newSJ);\n        if (newSJ.length === 0) {\n          setLines([]);\n        }\n\n        dispatch({\n          type: SET_JAWABAN_SOAL_MENJODOHKAN,\n          payload: newSJ,\n        });\n      } else {\n        // add lines\n        sj.push([\n          String(lastItemClicked.status_jawaban),\n          String(item.status_jawaban),\n        ]);\n\n        dispatch({ type: SET_JAWABAN_SOAL_MENJODOHKAN, payload: sj });\n      }\n    } else {\n      let exist = lineExists(\n        item.status_jawaban,\n        lastItemClicked.status_jawaban\n      );\n      if (exist >= 0) {\n        const newSJ = sj.filter((item, index) => {\n          if (index === exist) {\n            return false;\n          }\n          return true;\n        });\n        // console.log(\"---->newSJ\", newSJ);\n        if (newSJ.length === 0) {\n          setLines([]);\n        }\n        dispatch({\n          type: SET_JAWABAN_SOAL_MENJODOHKAN,\n          payload: newSJ,\n        });\n      } else {\n        sj.push([\n          String(item.status_jawaban),\n          String(lastItemClicked.status_jawaban),\n        ]);\n        dispatch({ type: SET_JAWABAN_SOAL_MENJODOHKAN, payload: sj });\n      }\n    }\n    setLastItemClicked({});\n  };\n  useEffect(() => {\n    function handleResize() {\n      setDimensions({\n        height: window.innerHeight,\n        width: window.innerWidth,\n      });\n    }\n\n    // function containerResize() {\n    //   setContainerDimension({\n    //     width: container.getBoundingClientRect().width,\n    //     height: container.getBoundingClientRect().height,\n    //   });\n    // }\n    // const container = document.getElementById(\"menjodohkan-container\");\n    // const resizeObserver = new ResizeObserver((el) => containerResize());\n    // resizeObserver.observe(container);\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      // container.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  // useEffect(() => {\n  //   const handleScroll = () => {\n  //     const currentScrollY = window.scrollY;\n  //     if (prevScrollY.current < currentScrollY && goingUp) {\n  //       setGoingUp(false);\n  //     }\n  //     if (prevScrollY.current > currentScrollY && !goingUp) {\n  //       setGoingUp(true);\n  //     }\n\n  //     prevScrollY.current = currentScrollY;\n  //     console.log(goingUp, currentScrollY);\n  //   };\n\n  //   window.addEventListener(\"scroll\", handleScroll, { passive: true });\n\n  //   return () => window.removeEventListener(\"scroll\", handleScroll);\n  // }, [goingUp]);\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    function separate() {\n      left.item = [];\n      right.item = [];\n      for (let i = 0; i < data_jawaban.jawaban.length; i++) {\n        const item = data_jawaban.jawaban[i];\n        if (item.label === left.label) {\n          left.item.push(item);\n        } else {\n          right.item.push(item);\n        }\n      }\n      leftRef.current = [];\n      rightRef.current = [];\n      setDataJawaban({ left, right });\n    }\n    separate();\n    setTimeout(() => {\n      setDimensions({ height: window.innerHeight, width: window.innerWidth });\n    }, 1500);\n  }, []);\n\n  useEffect(() => {\n    function reCreateLines() {\n      const newLines = [];\n      const statusjawaban = data_jawaban.pola_jawaban[2].status_jawaban;\n      if (statusjawaban.length === 0) return;\n      if (leftRef.current.length === 0 || rightRef.current.length === 0) return;\n      for (let i = 0; i < statusjawaban.length; i++) {\n        const [leftIndex, rightIndex] = statusjawaban[i];\n        console.log(statusjawaban[i]);\n        const p1 = leftRef.current[leftIndex - 1].getBoundingClientRect();\n        const p2 = rightRef.current[rightIndex - 1].getBoundingClientRect();\n        newLines.push({\n          x0: p1.x + p1.width,\n          y0: p1.y + p1.height / 2,\n          x1: p2.x,\n          y1: p2.y + p2.height / 2,\n        });\n        console.log(newLines);\n      }\n      // console.log(\"lines -->\", newLines);\n      setTimeout(() => {\n        setLines(newLines);\n      }, 0);\n    }\n    reCreateLines();\n  }, [\n    leftRef.current,\n    rightRef.current,\n    dimensions,\n    dataJawaban,\n    data_jawaban,\n  ]);\n\n  // ----------\n\n  useEffect(() => {\n    if (dataSoal.status[dataSoal.current.index].status === \"dijawab\") {\n      const data = {\n        exam_user_question_id: userSoal.id_soal[dataSoal.current.index],\n        pola_jawaban:\n          dataSoal.soal[dataSoal.current.index].exam_question_answer\n            .pola_jawaban,\n      };\n      const config = {\n        ...endpoints.jawabSoalPilgan,\n        data,\n      };\n      request(null, config)\n        .then((res) => {\n          dispatch({\n            type: SET_HASIL_JAWAB_SOAL,\n            payload: { hasil: res.data.status_jawaban },\n          });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [DATA_SOAL]);\n\n  return (\n    <div className=\"row\">\n      {lines.map((item, index) => {\n        return (\n          // <span>Kuda</span>\n          <Line\n            borderColor=\"red\"\n            borderWidth={5}\n            key={index}\n            x0={item.x0}\n            x1={item.x1}\n            y0={item.y0}\n            y1={item.y1}\n          />\n        );\n      })}\n      <div className=\"col-12\">\n        {DATA_SOAL.exam_question_articles.map((item, index) => {\n          return (\n            <div className=\"mb-2\" key={index}>\n              <p className=\"text-center font-weight-bold\">{item.judul}</p>\n              <div\n                dangerouslySetInnerHTML={{ __html: generateHTML(item.artikel) }}\n              />\n            </div>\n          );\n        })}\n        <p\n          className=\"text-primary mb-1\"\n          dangerouslySetInnerHTML={{\n            __html: generateHTML(DATA_SOAL.exam_question_answer.pertanyaan),\n          }}\n        />\n        {/* menjodohkan jawaban */}\n        <CFormGroup row id=\"menjodohkan-container\">\n          <CCol xs={5}>\n            <ul className=\"list-group\">\n              {Object.keys(dataJawaban).length &&\n                dataJawaban.left.item.map((item, index) => {\n                  return (\n                    <li\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        onListItemClicked(item, index + 1);\n                      }}\n                      key={index}\n                      ref={(el) => (leftRef.current[index] = el)}\n                      className={`left-${index} text-center list-group-item list-group-item-action ${\n                        lastItemClicked.text_jawaban === item.text_jawaban\n                          ? \"active\"\n                          : \"\"\n                      }`}\n                    >\n                      {item.text_jawaban}\n                    </li>\n                  );\n                })}\n            </ul>\n          </CCol>\n          <CCol xs={2} />\n          <CCol xs={5}>\n            <ul className=\"list-group\">\n              {Object.keys(dataJawaban).length &&\n                dataJawaban.right.item.map((item, index) => {\n                  return (\n                    <li\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => {\n                        onListItemClicked(item, index + 1);\n                      }}\n                      key={index}\n                      ref={(el) => (rightRef.current[index] = el)}\n                      className={`right-${index} text-center list-group-item list-group-item-action ${\n                        lastItemClicked.text_jawaban === item.text_jawaban\n                          ? \"active\"\n                          : \"\"\n                      }`}\n                    >\n                      {item.text_jawaban}\n                    </li>\n                  );\n                })}\n            </ul>\n          </CCol>\n        </CFormGroup>\n        {/* {DATA_SOAL.exam_question_answer.jawaban.map((item, index) => {\n          return (\n            <CFormGroup key={index} variant=\"custom-radio\">\n              <CInputRadio\n                custom\n                name=\"radio-input-jawaban\"\n                id={`radio-layout-soal-${index}`}\n                checked={Boolean(parseInt(item.status_jawaban))}\n                onChange={(e) => {\n                  dispatch({ type: SET_JAWABAN_SOAL_PG, payload: index });\n                  dispatch({\n                    type: SET_STATUS_JAWAB_SOAL,\n                    payload: { status: \"dijawab\" },\n                  });\n                }}\n              />\n              <CLabel\n                variant=\"custom-checkbox\"\n                htmlFor={`radio-layout-soal-${index}`}\n              >\n                {mapNumToChar(index)}\n                <span\n                  className=\"pilgan-answer ml-3\"\n                  dangerouslySetInnerHTML={{\n                    __html: generateHTML(item.text_jawaban, true),\n                  }}\n                />\n              </CLabel>\n            </CFormGroup>\n          );\n        })} */}\n      </div>\n    </div>\n  );\n}\n\nexport default MenjodohkanVertikal;\n","import React from \"react\";\n\nexport default function PageLoading() {\n  return (\n    <div\n      style={{ height: \"100vh\" }}\n      className=\"d-flex align-items-center justify-content-center\"\n    >\n      <div className=\"spinner-grow text-primary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-secondary\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-danger\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n      <div className=\"spinner-grow text-warning\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalTitle,\n  CModalHeader,\n  CInput,\n  CRow,\n  CCard,\n  CFormGroup,\n  CCol,\n  CToast,\n  CToastBody,\n  CToastHeader,\n  CToaster,\n} from \"@coreui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport Countdown from \"react-countdown\";\nimport {\n  SET_CURRENT_SOAL,\n  SET_DATA_SOAL,\n  SET_STATUS_JAWAB_SOAL,\n  SET_ID_USER_SOAL,\n} from \"../../../redux/actions\";\n\n// jenis soal\nimport {\n  PilihanGanda,\n  PilihanGandaVertical,\n  MultipleSelection,\n  MultipleSelectionVertical,\n  BenarSalahVertikal,\n  BenarSalahHorizontal,\n  ShortEssay,\n  SurveyLingkungan,\n  Menjodohkan,\n  MenjodohkanVertical,\n} from \"../../Soal\";\n\nimport endpoints from \"../../../utils/endpoints\";\nimport request from \"../../../utils/request\";\nimport moment from \"moment\";\nimport Header from \"../Header\";\nimport PageLoading from \"../../Loading/PageLoading\";\n\nfunction Exam() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const dataSoal = useSelector((state) => state.dataSoal);\n  const dataExam = useSelector((state) => state.dataExam);\n  const { profile } = useSelector((state) => state.user);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const { totalSoal: totalSoalUjian, waktu_server } = useSelector(\n    (state) => state.userSoal\n  );\n  const [showModalNavigation, setShowModalNavigation] = useState(false);\n  const [showModalInformasi, setShowModalInformasi] = useState(false);\n  const [confirmExit, setConfirmExit] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(5400000);\n  const [\n    showModalFinishConfirmation,\n    setShowModalFinishConfirmation,\n  ] = useState(false);\n\n  const toggleModalNavigation = () => {\n    setShowModalNavigation(!showModalNavigation);\n  };\n  const toggleModalFinishConfirmation = () => {\n    setShowModalFinishConfirmation(!showModalFinishConfirmation);\n  };\n  const toggleShowModalInformasi = () => {\n    setShowModalInformasi(!showModalInformasi);\n  };\n  const toggle = () => {\n    setModal((state) => !state);\n  };\n\n  // const [countDown, setCountDown] = useState(\n  //   new Date(waktu_server).getTime() +\n  //     dataExam.current.lama_pengerjaan_soal * 60000\n  // );\n\n  // Toats -------------------------------------------------\n\n  const [toasts, setToasts] = useState([]);\n  const toasters = (() => {\n    return toasts.reduce((toasters, toast) => {\n      toasters[toast.position] = toasters[toast.position] || [];\n      toasters[toast.position].push(toast);\n      return toasters;\n    }, {});\n  })();\n\n  // -----------------------------------------------------\n\n  const addToast = ({ success, message }) => {\n    setToasts([\n      ...toasts,\n      {\n        position: \"top-right\",\n        success,\n        message,\n        autohide: 4000,\n        closeButton: true,\n        fade: true,\n      },\n    ]);\n  };\n\n  // -----------------------------------------------------\n\n  const strip_html_tags = (str) => {\n    if (str === null || str === \"\") return false;\n    else str = str.toString();\n    return str.replace(/<[^>]*>/g, \"\");\n  };\n  // -----------------------------------------------------\n\n  const generateHTML = (html, isOption = false) => {\n    const includeImage = html.split(\"data:image\");\n    html = html.replace(\n      '<p data-f-id=\"pbf\" style=\"text-align: center; font-size: 14px; margin-top: 30px; opacity: 0.65; font-family: sans-serif;\">Powered by <a href=\"https://www.froala.com/wysiwyg-editor?pb=1\" title=\"Froala Editor\">Froala Editor</a></p>',\n      \"\"\n    );\n    if (!isOption) return html;\n    if (includeImage.length > 1) {\n      return html;\n    } else {\n      return strip_html_tags(html);\n    }\n  };\n\n  // -----------------------------------------------------\n\n  const confirmTimeEnd = async () => {\n    const config = {\n      ...endpoints.getExamTimeLeft,\n      endpoint: endpoints.getExamTimeLeft.endpoint + dataExam.current.id,\n    };\n    const { status, data } = await request({}, config);\n    if (data <= 0) {\n      sendLog(data);\n      quitExam();\n    } else {\n      setTimeLeft(data);\n    }\n  };\n\n  // -----------------------------------------------------\n\n  const sendLog = (timeLeftbackend) => {\n    try {\n      const config = {\n        ...endpoints.createLog,\n        data: {\n          key: \"waktu-habis\",\n          value: {\n            timeLeftbackend,\n            user: {\n              nama: profile.nama,\n              username: profile.username,\n              sekolah: profile.school_nama,\n            },\n            ujian: {\n              examUserId: dataExam.currentUser.id,\n              id: dataExam.current.id,\n              token: dataExam.current.token,\n              waktu_mulai: new Date(dataExam.current.waktu_mulai) || null,\n              waktu_selesai: new Date(dataExam.current.waktu_selesai) || null,\n            },\n            device: {\n              time: new Date(),\n              browser: {\n                ua: window.navigator.userAgent || null,\n                app: window.navigator.appVersion || null,\n                connection: window.navigator.connection.effectiveType || null,\n              },\n            },\n          },\n        },\n      };\n\n      request(null, config)\n        .then((res) => console.log(\"Log sent\"))\n        .catch((err) => console.log(\"Log not sent\"));\n    } catch (error) {\n      console.log(\"Log not sent\");\n    }\n\n    // alert(1);\n  };\n\n  // -----------------------------------------------------\n\n  const quitExam = async (msg = \"Waktu ujian Habis\") => {\n    try {\n      const config = {\n        ...endpoints.startExamUser,\n        data: {\n          id: dataExam.currentUser.id,\n          waktu_selesai: moment().format(\"YYYY-MM-DD HH:mm\"),\n          status_ujian: \"selesai\",\n        },\n      };\n      const res = await request(null, config);\n      setAlertMessage(\n        \"Waktu Ujian Habis!\\n\" +\n          \"Ujian ini akan diselesaikan secara otomatis\\n\" +\n          \"Terima kasih telah mengikuti ujian🙏\"\n      );\n      setModal(true);\n      setTimeout(() => {\n        setModal((state) => !state);\n        history.push(\"/login\");\n      }, 5000);\n    } catch (error) {\n      setModal(true);\n      setAlertMessage(error.error.response.data.messages);\n      setTimeout(() => {\n        setModal((state) => !state);\n        history.push(\"/login\");\n      }, 5000);\n    }\n  };\n\n  // -----------------------------------------------------\n\n  const generateNextSoal = async (ragu = false) => {\n    setLoading(true);\n    let res = null;\n    let config = {};\n    try {\n      if (ragu) {\n        config = {\n          ...endpoints.generateSoal,\n          data: {\n            exam_user_id: dataExam.currentUser.id,\n            level_soal_terakhir:\n              dataSoal.soal[dataSoal.current.index].level_soal,\n            hasil_jawaban_terakhir: null,\n          },\n        };\n      } else {\n        config = {\n          ...endpoints.generateSoal,\n          data: {\n            exam_user_id: dataExam.currentUser.id,\n            level_soal_terakhir:\n              dataSoal.soal[dataSoal.current.index].level_soal,\n            hasil_jawaban_terakhir:\n              dataSoal.status[dataSoal.current.index].hasil,\n          },\n        };\n      }\n\n      res = await request(null, config);\n      // console.log(\"res ->\", res);\n      if (\n        res.data.exam_question_answer.tipe_jawaban == \"pilihan_ganda\" ||\n        res.data.exam_question_answer.tipe_jawaban == \"pilihan_ganda_komplex\" ||\n        res.data.exam_question_answer.tipe_jawaban == \"benar_salah\" ||\n        res.data.exam_question_answer.tipe_jawaban == \"survey_lingkungan\"\n      ) {\n        const nextSoal = {\n          ...res.data,\n          exam_question_answer: {\n            ...res.data.exam_question_answer,\n            jawaban: res.data.exam_question_answer.jawaban.map((item) => {\n              return {\n                ...item,\n                status_jawaban: \"0\",\n              };\n            }),\n          },\n        };\n        dispatch({\n          type: SET_DATA_SOAL,\n          payload: nextSoal,\n        });\n        dispatch({\n          type: SET_ID_USER_SOAL,\n          payload: res.exam_user_question_id,\n        });\n        dispatch({\n          type: SET_CURRENT_SOAL,\n          payload: { index: dataSoal.current.index + 1 },\n        });\n      } else if (\n        res.data.exam_question_answer.tipe_jawaban == \"isian_singkat\"\n      ) {\n        const nextSoal = {\n          ...res.data,\n          exam_question_answer: {\n            ...res.data.exam_question_answer,\n            jawaban: res.data.exam_question_answer.jawaban.map((item) => {\n              return {\n                ...item,\n                text_jawaban: \"\",\n              };\n            }),\n          },\n        };\n        dispatch({\n          type: SET_DATA_SOAL,\n          payload: nextSoal,\n        });\n        dispatch({\n          type: SET_ID_USER_SOAL,\n          payload: res.exam_user_question_id,\n        });\n        dispatch({\n          type: SET_CURRENT_SOAL,\n          payload: { index: dataSoal.current.index + 1 },\n        });\n      } else {\n        dispatch({ type: SET_DATA_SOAL, payload: res.data });\n        dispatch({\n          type: SET_ID_USER_SOAL,\n          payload: res.exam_user_question_id,\n        });\n        dispatch({\n          type: SET_CURRENT_SOAL,\n          payload: { index: 0 },\n        });\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n      if (error.status === 422) {\n        // quitExam(error.error.response.data.messages);\n        confirmTimeEnd();\n      } else {\n        addToast({\n          success: false,\n          message:\n            \"Terjadi kesalahan saat mengambil soal, pastikan internet stabil\",\n        });\n      }\n    }\n  };\n\n  // -----------------------------------------------------\n\n  const generateSoal = () => {\n    // console.log(\"current --->\", dataSoal.soal[dataSoal.current.index]);\n    if (\n      dataSoal.soal[dataSoal.current.index].pertanyaan_layout === \"vertikal\"\n    ) {\n      switch (\n        dataSoal.soal[dataSoal.current.index].exam_question_answer.tipe_jawaban\n      ) {\n        case \"pilihan_ganda\":\n          return (\n            <PilihanGandaVertical\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"pilihan_ganda_komplex\":\n          return (\n            <MultipleSelectionVertical\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"benar_salah\":\n          return (\n            <BenarSalahVertikal\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"isian_singkat\":\n          return (\n            <ShortEssay dataSoal={dataSoal.soal[dataSoal.current.index]} />\n          );\n        case \"menjodohkan\":\n          return (\n            <MenjodohkanVertical\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"survey_lingkungan\":\n          return (\n            <SurveyLingkungan\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        default:\n          return (\n            <PilihanGandaVertical\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n      }\n    } else {\n      switch (\n        dataSoal.soal[dataSoal.current.index].exam_question_answer.tipe_jawaban\n      ) {\n        case \"pilihan_ganda\":\n          return (\n            <PilihanGanda dataSoal={dataSoal.soal[dataSoal.current.index]} />\n          );\n        case \"pilihan_ganda_komplex\":\n          return (\n            <MultipleSelection\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"menjodohkan\":\n          return (\n            <Menjodohkan dataSoal={dataSoal.soal[dataSoal.current.index]} />\n          );\n        case \"benar_salah\":\n          return (\n            <BenarSalahHorizontal\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        case \"isian_singkat\":\n          return (\n            <ShortEssay dataSoal={dataSoal.soal[dataSoal.current.index]} />\n          );\n        case \"survey_lingkungan\":\n          return (\n            <SurveyLingkungan\n              dataSoal={dataSoal.soal[dataSoal.current.index]}\n            />\n          );\n        default:\n          return (\n            <PilihanGanda dataSoal={dataSoal.soal[dataSoal.current.index]} />\n          );\n      }\n    }\n  };\n\n  // -----------------------------------------------------\n\n  const getTimeLeft = async () => {\n    try {\n      const config = {\n        ...endpoints.getExamTimeLeft,\n        endpoint: endpoints.getExamTimeLeft.endpoint + dataExam.current.id,\n      };\n      const { status, data } = await request({}, config);\n      if (data > 0) {\n        setTimeLeft(data);\n      } else {\n        sendLog(data);\n        quitExam();\n      }\n    } catch (error) {\n      addToast({\n        success: false,\n        message:\n          \"Terjadi kesalahan saat mengambil waktu server, pastikan internet stabil\",\n      });\n    }\n  };\n\n  // -----------------------------------------------------\n\n  useEffect(() => {\n    getTimeLeft();\n    const interval = setInterval(() => {\n      confirmTimeEnd();\n    }, 120000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // -----------------------------------------------------\n\n  const isLoggedIn = () => (profile.nama ? true : false);\n\n  if (!isLoggedIn()) {\n    return <Redirect to=\"/login\" />;\n  }\n  // console.log(\"render\");\n  return (\n    <>\n      <Header>\n        <CRow>\n          <CCol md=\"12\">\n            <CCard className=\"card-rounded shadow border-white p-4 mt-2\">\n              <div\n                className=\"d-flex justify-content-between pb-1\"\n                style={{\n                  borderBottomWidth: 2,\n                  borderBottomColor: \"#ccc\",\n                  borderBottomStyle: \"solid\",\n                }}\n              >\n                <div>\n                  <h5 className=\"text-black-50 mb-0\">\n                    Soal Nomor{\" \"}\n                    <strong className=\"text-primary\">\n                      {dataSoal.current.index + 1}\n                    </strong>\n                  </h5>\n                  {/* <p className=\"mb-0\">\n                    Ukuran font soal:{\" \"}\n                    {DATA_UKURAN_SOAL.map((item, index) => (\n                      <span\n                        style={{\n                          fontSize: item.fontSize,\n                          marginRight: 10,\n                          fontWeight: item.fontWeight,\n                          cursor: \"pointer\",\n                        }}\n                        key={index}\n                      >\n                        A\n                      </span>\n                    ))}\n                  </p> */}\n                </div>\n                <div className=\"\">\n                  <CButton\n                    style={{ borderRadius: 50 }}\n                    color=\"primary\"\n                    className=\"m-1\"\n                    onClick={() => setShowModalInformasi(true)}\n                  >\n                    INFORMASI SOAL\n                  </CButton>\n                  <CButton\n                    style={{ borderRadius: 50, fontWeight: \"bold\" }}\n                    color=\"outline-danger\"\n                    className=\"m-1\"\n                  >\n                    <span>Sisa Waktu: </span>\n                    <Countdown\n                      date={new Date().getTime() + timeLeft}\n                      // controlled={true}\n                      onComplete={() => confirmTimeEnd()}\n                      // onTick={() => {}}\n                      // onStart={() => console.log(\"start contdown\")}\n                    />\n                  </CButton>\n                  <CButton\n                    style={{ borderRadius: 50 }}\n                    color=\"primary\"\n                    className=\"m-1\"\n                    onClick={() => setShowModalNavigation(true)}\n                  >\n                    <span>Daftar Soal</span>\n                    <i className=\"fas fa-th-large ml-2\" />\n                  </CButton>\n                </div>\n              </div>\n              <div className=\"border-2\">\n                {loading ? <PageLoading /> : generateSoal()}\n              </div>\n              <div className=\"mt-2 d-flex justify-content-between\">\n                <CButton\n                  style={{ borderRadius: 50 }}\n                  color=\"danger\"\n                  // className=\"px-3\"\n                  disabled={dataSoal.current.index === 0}\n                  onClick={() => {\n                    window.scrollTo(0, 0);\n                    dispatch({\n                      type: SET_CURRENT_SOAL,\n                      payload: { index: dataSoal.current.index - 1 },\n                    });\n                  }}\n                >\n                  <i className=\"fas fa-chevron-circle-left mr-2\" />\n                  <span>Soal Sebelumnya</span>\n                </CButton>\n                <CButton\n                  style={{ borderRadius: 50 }}\n                  color=\"warning\"\n                  // className=\"px-3\"\n                  disabled={\n                    (dataSoal.soal.length === totalSoalUjian &&\n                      dataSoal.current.index + 1 === totalSoalUjian) ||\n                    loading\n                  }\n                  onClick={() => {\n                    window.scrollTo(0, 0);\n                    if (dataSoal.current.index + 2 > dataSoal.soal.length) {\n                      generateNextSoal(true);\n                    } else {\n                      dispatch({\n                        type: SET_CURRENT_SOAL,\n                        payload: { index: dataSoal.current.index + 1 },\n                      });\n                    }\n                    dispatch({\n                      type: SET_STATUS_JAWAB_SOAL,\n                      payload: { status: \"ragu_ragu\" },\n                    });\n                  }}\n                >\n                  <i className=\"fas fa-stop mr-2 text-white\" />\n                  <span className=\"text-white\">Ragu-ragu</span>\n                </CButton>\n                {dataSoal.soal.length === totalSoalUjian &&\n                dataSoal.current.index + 1 === totalSoalUjian ? (\n                  <CButton\n                    style={{ borderRadius: 50 }}\n                    color=\"primary\"\n                    onClick={() => setShowModalFinishConfirmation(true)}\n                  >\n                    <span>Selesai</span>\n                    <i className=\"fas fa-chevron-circle-right ml-2\" />\n                  </CButton>\n                ) : (\n                  <CButton\n                    style={{ borderRadius: 50 }}\n                    color=\"primary\"\n                    className=\"px-3\"\n                    disabled={loading}\n                    onClick={() => {\n                      if (dataSoal.current.index + 2 > dataSoal.soal.length) {\n                        generateNextSoal();\n                      } else {\n                        dispatch({\n                          type: SET_CURRENT_SOAL,\n                          payload: { index: dataSoal.current.index + 1 },\n                        });\n                      }\n                    }}\n                  >\n                    <span>Soal Selanjutnya</span>\n                    <i className=\"fas fa-chevron-circle-right ml-2\" />\n                  </CButton>\n                )}\n              </div>\n            </CCard>\n          </CCol>\n        </CRow>\n      </Header>\n      <CModal show={showModalInformasi} onClose={toggleShowModalInformasi}>\n        <CModalHeader closeButton>\n          <CModalTitle>Informasi Soal</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"d-flex direction-row justify-content-start soal-item-container\">\n            <div\n              dangerouslySetInnerHTML={{\n                __html: generateHTML(\n                  dataSoal.soal[dataSoal.current.index].informasi_soal\n                ),\n              }}\n            />\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* Modal Navigation*/}\n      <CModal show={showModalNavigation} onClose={toggleModalNavigation}>\n        <CModalHeader closeButton>\n          <CModalTitle>Daftar Soal</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <div className=\"d-flex direction-row flex-wrap justify-content-start soal-item-container\">\n            {dataSoal.status.map((item, index) => {\n              if (index < totalSoalUjian) {\n                return (\n                  <div\n                    key={index}\n                    style={\n                      index + 1 <= dataSoal.soal.length\n                        ? { cursor: \"pointer\" }\n                        : {}\n                    }\n                    onClick={\n                      index + 1 <= dataSoal.soal.length\n                        ? () => {\n                            dispatch({\n                              type: SET_CURRENT_SOAL,\n                              payload: { index },\n                            });\n                          }\n                        : () => {}\n                    }\n                    className={\n                      \"text-white soal-item \" +\n                      (index === dataSoal.current.index\n                        ? \"bg-primary\"\n                        : item.status === \"dijawab\"\n                        ? \"bg-success\"\n                        : item.status === \"ragu_ragu\"\n                        ? \"bg-warning\"\n                        : \"bg-secondary\")\n                    }\n                  >\n                    {index + 1}\n                  </div>\n                );\n              }\n              return null;\n            })}\n          </div>\n        </CModalBody>\n      </CModal>\n      {/* Modal Finish */}\n      <CModal\n        show={showModalFinishConfirmation}\n        onClose={toggleModalFinishConfirmation}\n      >\n        <CModalHeader closeButton>\n          <CModalTitle>Konfirmasi Tes</CModalTitle>\n        </CModalHeader>\n        <CModalBody>\n          <p className=\"mb-0\">\n            Anda masih memiliki waktu lebih dari 60 detik untuk mata uji ini\n          </p>\n          <p className=\"mb-0\">\n            Apakah anda yakin ingin mengakhiri mata uji ini?\n          </p>\n          <CFormGroup style={{ marginBottom: 3 }}>\n            <CInput\n              type=\"checkbox\"\n              label=\"Centang kemudian tekan tombol selesai\"\n              checked={confirmExit}\n              onChange={() => setConfirmExit(!confirmExit)}\n            />\n          </CFormGroup>\n        </CModalBody>\n        <CModalFooter>\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Link to={\"/exam-finish\"}>\n              <CButton\n                color=\"danger\"\n                shape=\"pill\"\n                size=\"lg\"\n                disabled={!confirmExit}\n              >\n                SELESAI\n              </CButton>\n            </Link>\n            <CButton\n              color=\"success\"\n              shape=\"pill\"\n              onClick={() => setShowModalFinishConfirmation(false)}\n              className=\"mx-2 px-4\"\n              size=\"lg\"\n            >\n              TIDAK\n            </CButton>\n          </div>\n        </CModalFooter>\n      </CModal>\n      <CModal show={modal} onClose={toggle} closeOnBackdrop={false}>\n        <CModalHeader closeButton>Informasi</CModalHeader>\n        <CModalBody>{alertMessage}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={toggle}>\n            OK\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      {/* Toaster */}\n      {Object.keys(toasters).map((toasterKey) => (\n        <CToaster position={toasterKey} key={\"toaster\" + toasterKey}>\n          {toasters[toasterKey].map((toast, key) => {\n            return (\n              <CToast\n                key={\"toast\" + key}\n                show={true}\n                autohide={toast.autohide}\n                fade={toast.fade}\n              >\n                <CToastHeader\n                  closeButton={toast.closeButton}\n                  className={`${\n                    toast.success ? \"bg-primary\" : \"bg-danger\"\n                  } text-white`}\n                >\n                  Informasi\n                </CToastHeader>\n                <CToastBody>{toast.message}</CToastBody>\n              </CToast>\n            );\n          })}\n        </CToaster>\n      ))}\n    </>\n  );\n}\n\nexport default Exam;\n"],"sourceRoot":""}