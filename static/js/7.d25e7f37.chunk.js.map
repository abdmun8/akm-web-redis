{"version":3,"sources":["utils/request.js","utils/endpoints.js","data/config.js","assets/images/logo-rasyiidu-black.png","views/BackgroundHeader/index.js","views/pages/Header/index.js","views/pages/ExamFinish/index.js"],"names":["request","param","config","header","endpoint","method","data","url","ApiConfig","baseUrl","params","token","localStorage","getItem","headers","Authorization","axiosConfig","timeout","toUpperCase","shouldLogApi","console","log","Promise","resolve","reject","axios","then","response","body","catch","err","status","code","message","error","endpoints","postCreateSoal","getListSoal","getListUjian","getSoalById","gerListArticle","getUsers","getEvents","createEvent","createSchool","getSchool","importUser","createUser","login","chooseExamUser","id","startExamUser","status_ujian","generateFirsSoal","level_soal_terakhir","hasil_jawaban_terakhir","generateSoal","jawabSoalPilgan","getExamDetail","getExamTimeLeft","createLog","process","exams","1","2","3","4","5","6","7","8","9","10","11","12","module","exports","Header","className","DataConfirmation","children","history","useHistory","dispatch","useDispatch","useState","confirmLogout","setConfirmLogout","profile","useSelector","state","user","logout","a","type","RESET_USER","payload","clear","push","show","onClose","shape","color","onClick","fluid","src","logo","alt","nama","ExamConfirmation","dataExam","isLoading","setIsLoading","alertMessage","setAlertMessage","modal","setModal","finishTest","currentUser","waktu_selesai","moment","format","setTimeout","messages","toggle","md","block","size","disabled","closeOnBackdrop","closeButton","to"],"mappings":"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","file":"static/js/7.d25e7f37.chunk.js","sourcesContent":["/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  IMPORTS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\n\r\n// ----------------------------------------\r\n// PACKAGE IMPORTS\r\n// ----------------------------------------\r\nimport axios from \"axios\";\r\nimport { ApiConfig, shouldLogApi } from \"src/data/config\";\r\n\r\n// ----------------------------------------\r\n// LOCAL IMPORTS\r\n// ----------------------------------------\r\n// import ApiConfig from \"@app-configs/Api\";\r\n// import API from \"@app-api-endpoints\";\r\n\r\n/*\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n *  METHODS\r\n * ---------------------------------------------------------------------------------------\r\n * ---------------------------------------------------------------------------------------\r\n */\r\nexport default function request(param, config, header = {}) {\r\n  // ApiConfig.devLog &&\r\n  // (ApiConfig.devLogApis.length === 0 ||\r\n  //   ApiConfig.devLogApis.indexOf(api) > -1 ||\r\n  //   ApiConfig.breakDevLogToken);\r\n\r\n  const { endpoint, method, data } = config;\r\n\r\n  const url = `${ApiConfig.baseUrl}${endpoint}`;\r\n  const params = {\r\n    ...param,\r\n    ...data,\r\n  };\r\n\r\n  let token = localStorage.getItem(\"token\"); //ApiConfig.getToken(getState);\r\n\r\n  // if (shouldLogApi && ApiConfig.breakDevLogToken) {\r\n  //   console.error(token);\r\n  // }\r\n\r\n  const headers = {\r\n    ...header,\r\n    // \"Content-Type\": \"application/json\",\r\n    // \"Accept\": \"application/json\",\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const axiosConfig = {\r\n    method,\r\n    url,\r\n    headers,\r\n    timeout: ApiConfig.timeout * 1000,\r\n  };\r\n\r\n  if (method.toUpperCase() === \"GET\") {\r\n    axiosConfig.params = params;\r\n  } else {\r\n    axiosConfig.data = params;\r\n  }\r\n  // console.log(\"config\", axiosConfig);\r\n\r\n  if (shouldLogApi) {\r\n    console.log(\r\n      \"[request start]\\n\\n-url: \",\r\n      url,\r\n      \"\\n\\n-method: \",\r\n      method,\r\n      \"\\n\\n-params: \",\r\n      params,\r\n      \"\\n\\n-config: \",\r\n      axiosConfig\r\n    );\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    axios(axiosConfig)\r\n      .then((response) => {\r\n        if (shouldLogApi) {\r\n          console.log(\r\n            \"[response received]\\n\\n-url: \",\r\n            url,\r\n            \"\\n\\n-method: \",\r\n            method,\r\n            \"\\n\\n-params: \",\r\n            params,\r\n            \"\\n\\n-response: \",\r\n            response\r\n          );\r\n        }\r\n\r\n        const body = response.data;\r\n        resolve(body);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\r\n          \"[response error]\\n\\n-url: \",\r\n          url,\r\n          \"\\n\\n-method: \",\r\n          method,\r\n          \"\\n\\n-params: \",\r\n          params,\r\n          \"\\n\\n-response: \",\r\n          err\r\n        );\r\n\r\n        reject({\r\n          status:\r\n            err.response && err.response.status ? err.response.status : 999,\r\n          code: \"x999\",\r\n          message: err.message,\r\n          error: err,\r\n          // additionals: {\r\n          //   url: url,\r\n          //   method: method,\r\n          //   params: JSON.stringify(params),\r\n\r\n          // },\r\n        });\r\n      });\r\n  });\r\n}\r\n","const endpoints = {\n  postCreateSoal: {\n    endpoint: \"/api/exam/question/save-all\",\n    method: \"POST\",\n    data: {},\n  },\n  getListSoal: {\n    endpoint: \"/api/exam/question\",\n    method: \"GET\",\n    data: {},\n  },\n  getListUjian: {\n    endpoint: \"/api/exam\",\n    method: \"GET\",\n    data: {},\n  },\n  getSoalById: {\n    endpoint: \"/api/exam/question/\",\n    method: \"GET\",\n    data: {},\n  },\n  gerListArticle: {\n    endpoint: \"/api/exam/question/article\",\n    method: \"GET\",\n    data: {},\n  },\n  getUsers: {\n    endpoint: \"/api/user\",\n    method: \"GET\",\n    data: {},\n  },\n  getEvents: {\n    endpoint: \"/api/exam/event\",\n    method: \"GET\",\n    data: {},\n  },\n  createEvent: {\n    endpoint: \"/api/exam/event\",\n    method: \"POST\",\n    data: {},\n  },\n  createSchool: {\n    endpoint: \"/api/school\",\n    method: \"POST\",\n    data: {},\n  },\n  getSchool: {\n    endpoint: \"/api/school\",\n    method: \"GET\",\n    data: {},\n  },\n  importUser: {\n    endpoint: \"/api/user/import\",\n    method: \"POST\",\n    data: {},\n  },\n  createUser: {\n    endpoint: \"/api/user\",\n    method: \"POST\",\n    data: {},\n  },\n  login: {\n    endpoint: \"/api/user/login\",\n    method: \"POST\",\n    data: {},\n  },\n  chooseExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      id: null,\n    },\n  },\n  startExamUser: {\n    endpoint: \"/api/exam/user\",\n    method: \"POST\",\n    data: {\n      status_ujian: \"progress\",\n    },\n  },\n  generateFirsSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {\n      level_soal_terakhir: null,\n      hasil_jawaban_terakhir: null,\n    },\n  },\n  generateSoal: {\n    endpoint: \"/api/exam/user/question/generate\",\n    method: \"POST\",\n    data: {},\n  },\n  jawabSoalPilgan: {\n    endpoint: \"/api/exam/user/answer\",\n    method: \"POST\",\n    data: {},\n  },\n  getExamDetail: {\n    endpoint: \"/api/exam/\",\n    method: \"GET\",\n    data: {},\n  },\n  getExamTimeLeft: {\n    endpoint: \"/api/exam/event/timeleft/\",\n    method: \"GET\",\n    data: {},\n  },\n  createLog: {\n    endpoint: \"/api/log/create\",\n    method: \"POST\",\n    data: {},\n  },\n};\n\nexport default endpoints;\n","export const ID_SOAL_AKM = 1;\nexport const ID_SOAL_SURVEY_KARAKTER = 2;\nexport const ApiConfig = {\n  baseUrl:\n    process.env.REACT_APP_ENVIRONTMENT === \"production\"\n      ? \"https://akm.rasyiidujs3.com\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"prod-local\"\n      ? \"http://192.168.0.200:8082\"\n      : process.env.REACT_APP_ENVIRONTMENT === \"local\"\n      ? \"http://127.0.0.1:8081\"\n      : \"https://akm-api-redis.aplikasiweb.site\",\n\n  timeout: 120,\n};\n\nexport const shouldLogApi = process.env.REACT_APP_ENVIRONTMENT !== \"production\";\n\nexport const access = {\n  0: \"Admin Utama\",\n  1: \"Admin MKKS\",\n  2: \"Proktor\",\n  3: \"Sub Proktor\",\n};\n\nexport const exams = {\n  1: \"AKM SMA Literasi\",\n  2: \"AKM SMA Numerasi\",\n  3: \"AKM SMP Literasi\",\n  4: \"AKM SMP Numerasi\",\n  5: \"Survey Karakter SMA\",\n  6: \"Survey Karakter SMP\",\n  7: \"Survey Lingkungan Belajar SMA\",\n  8: \"Survey Lingkungan Belajar SMP\",\n  9: \"Simulasi Literasi\",\n  10: \"Simulasi Numerasi\",\n  11: \"Simulasi Survey Karakter\",\n  12: \"Simulasi Survey Lingkungan Belajar\",\n};\n\nexport const statuses = {\n  0: \"Tidak Aktif\",\n  1: \"Aktif\",\n};\n\nexport const DATA_UKURAN_SOAL = [\n  { fontSize: 15, fontWeight: 700 },\n  { fontSize: 18, fontWeight: 500 },\n  { fontSize: 20, fontWeight: 300 },\n];\n\nexport const DATA_SOAL = [\n  { type: \"TarikGaris\" },\n  { type: \"Menjodohkan\" },\n  { type: \"Matching\" },\n  { type: \"PilihanGanda\" },\n  { type: \"MultipleSelection\" },\n  { type: \"Matrix\" },\n  { type: \"SingleSelectWithEssay\" },\n  { type: \"PilihanGandaVertical\" },\n  { type: \"ShortEssay\" },\n  // { type: 'Essay' },\n];\n","module.exports = __webpack_public_path__ + \"static/media/logo-rasyiidu-black.bb6b80e8.png\";","import React from \"react\";\n\nexport default function Header() {\n  return <div className=\"bg-header\" />;\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CContainer,\n  CButton,\n  CModal,\n  CModalHeader,\n  CModalFooter,\n  CModalTitle,\n  CModalBody,\n} from \"@coreui/react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { RESET_USER } from \"../../../redux/actions\";\nimport BGHeader from \"../../BackgroundHeader\";\nimport logo from \"../../../assets/images/logo-rasyiidu-black.png\";\n\nfunction DataConfirmation({ children }) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [confirmLogout, setConfirmLogout] = useState(false);\n  const { profile } = useSelector((state) => state.user);\n  const toggleModalLogout = () => {\n    setConfirmLogout(!confirmLogout);\n  };\n  const logout = async () => {\n    try {\n      dispatch({ type: RESET_USER, payload: null });\n      localStorage.clear();\n      history.push(\"/login\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <main className=\"c-main\">\n      <CModal show={confirmLogout} onClose={toggleModalLogout} shape=\"rounded\">\n        <CModalHeader>\n          <CModalTitle>Info</CModalTitle>\n        </CModalHeader>\n        <CModalBody>Apakah anda yakin akan keluar ?</CModalBody>\n        <CModalFooter>\n          <CButton shape=\"pill\" color=\"danger\" onClick={() => logout()}>\n            Ya\n          </CButton>\n          <CButton\n            shape=\"pill\"\n            color=\"success\"\n            onClick={() => setConfirmLogout(false)}\n          >\n            Tidak\n          </CButton>\n        </CModalFooter>\n      </CModal>\n      <BGHeader />\n      <CContainer fluid>\n        <div className=\"d-flex justify-content-between\">\n          <img src={logo} alt=\"logo-rasyiidu\" className=\"center\" />\n          <div className=\"\">\n            <strong className=\"text-white float-right mr-1\">\n              {profile.nama}\n            </strong>\n            <br />\n            <CButton\n              color=\"light\"\n              className=\"float-right font-weight-bold\"\n              shape=\"pill\"\n              onClick={() => setConfirmLogout(true)}\n            >\n              Logout\n            </CButton>\n          </div>\n        </div>\n        {children}\n      </CContainer>\n    </main>\n  );\n}\n\nexport default DataConfirmation;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n} from \"@coreui/react\";\nimport moment from \"moment\";\nimport {\n  RESET_DATA_EXAM,\n  RESET_DATA_SOAL,\n  RESET_USER,\n} from \"../../../redux/actions\";\nimport endpoints from \"../../../utils/endpoints\";\nimport request from \"../../../utils/request\";\nimport Header from \"../Header\";\n\nfunction ExamConfirmation() {\n  const dataExam = useSelector((state) => state.dataExam);\n  const { profile } = useSelector((state) => state.user);\n  const [isLoading, setIsLoading] = useState(false);\n  const history = useHistory();\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const finishTest = async () => {\n    setIsLoading(true);\n    try {\n      const config = {\n        ...endpoints.startExamUser,\n        data: {\n          id: dataExam.currentUser.id,\n          waktu_selesai: moment().format(\"YYYY-MM-DD HH:mm\"),\n          status_ujian: \"selesai\",\n        },\n      };\n      const res = await request(null, config);\n      setAlertMessage(\n        \"🎉👏Ujian telah berhasil diselesaikan,👏🎉\\n terima kasih telah mengikuti ujian!🙏\"\n      );\n      setModal(true);\n      setTimeout(() => {\n        setIsLoading((state) => !state);\n        setModal((state) => !state);\n        history.push(\"/login\");\n      }, 5000);\n    } catch (error) {\n      setAlertMessage(error.error.response.data.messages);\n      setModal(true);\n      setTimeout(() => {\n        setIsLoading((state) => !state);\n        setModal((state) => !state);\n        history.push(\"/login\");\n      }, 5000);\n    }\n  };\n\n  const isLoggedIn = () => (profile.nama ? true : false);\n  const toggle = () => {\n    setModal((state) => !state);\n  };\n\n  if (!isLoggedIn()) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <>\n      <Header>\n        <CRow className=\"d-flex justify-content-center\">\n          <CCol md={6}>\n            <CCard className=\"card-rounded shadow border-white d-flex flex-wrap mt-2\">\n              <CCardHeader className=\"d-flex direction-row justify-content-between align-items-center card-rounded border-0\">\n                <h3>Konfirmasi Tes</h3>\n              </CCardHeader>\n              <CCardBody className=\"pt-0\">\n                <div className=\"mb-4\">\n                  Terima kasih telah berpartisipasi dalam tes ini. Silahkan\n                  tekan tombol{\" \"}\n                  <span className=\"text-white px-1 bg-danger\">SELESAI TES</span>{\" \"}\n                  untuk mengakhiri tes.\n                  {/* atau tekan{\" \"} */}\n                  {/* <span className=\"text-white px-1 bg-success\">KEMBALI</span>{\" \"}\n                untuk kembali ke halaman test. */}\n                </div>\n                <div className=\"d-flex direction-row justify-content-center\">\n                  <CButton\n                    block\n                    color=\"danger\"\n                    className=\"mx-1\"\n                    size=\"lg\"\n                    shape=\"pill\"\n                    disabled={isLoading}\n                    onClick={() => finishTest()}\n                  >\n                    SELESAI TES\n                  </CButton>\n                  {/* <Link to={\"/exam\"}>\n                  <CButton\n                    block\n                    color=\"success\"\n                    className=\"mx-1\"\n                    size=\"lg\"\n                    shape=\"pill\"\n                  >\n                    KEMBALI\n                  </CButton>\n                </Link> */}\n                </div>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n      </Header>\n      <CModal show={modal} onClose={toggle} closeOnBackdrop={false}>\n        <CModalHeader closeButton>Informasi</CModalHeader>\n        <CModalBody>{alertMessage}</CModalBody>\n        <CModalFooter>\n          <CButton color=\"primary\" onClick={toggle}>\n            OK\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n}\n\nexport default ExamConfirmation;\n"],"sourceRoot":""}